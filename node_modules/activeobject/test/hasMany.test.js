var assert = require('assert');
var activeobject = require('../');

var Finger = activeobject({ 
  attributeAccessible: {
    name: "string"
  }
});
  
var Person = activeobject({
  hasMany: { fingers: Finger }
});

module.exports = {
  "Should create relation properties" : function() {
    var fingersDescriptor = Object.getOwnPropertyDescriptor(Person.prototype, "fingers");
    assert.ok(fingersDescriptor.enumerable);
    assert.ok(fingersDescriptor.configurable);
    assert.equal(typeof fingersDescriptor, "object");
    assert.equal(typeof fingersDescriptor.get, "function");
    assert.equal(typeof fingersDescriptor.set, "function");
    
    var fingersAttributesDescriptor = Object.getOwnPropertyDescriptor(Person.prototype, "fingersAttributes");
    assert.ok(fingersAttributesDescriptor.enumerable);
    assert.ok(fingersAttributesDescriptor.configurable);
    assert.equal(typeof fingersAttributesDescriptor, "object");
    assert.equal(typeof fingersAttributesDescriptor.get, "undefined");
    assert.equal(typeof fingersAttributesDescriptor.set, "function");
  },

  "Should get empty relation" : function() {
    var mike = new Person();
    assert.equal(mike.fingers.length, 0);
  },
  
  "Should save instance variable" : function() {
    var mike = new Person();
    
    assert.ok(mike.fingers === mike.fingers);
  }
};
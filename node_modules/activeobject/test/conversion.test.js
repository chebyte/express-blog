var assert = require('assert');
var activeobject = require('../')

var Foo = activeobject({ 
  attributeAccessible: {
    age: "int",
    height: "float",
    birthday: "date",
    name: "string",
    isReady: "boolean",
    price: "currency",
    approvalRating: "percent"
  }
});

module.exports = {

  "should convert string to int": function() {
    var bar = new Foo();
    bar.age = "4";
    
    assert.equal(bar.age, 4);
    assert.equal(bar.ageBeforeTypeCast, "4");
  },
  
  "should convert an int into an int": function() {
    var bar = new Foo();
    bar.age = 4;
    
    assert.equal(bar.age, 4);
    assert.equal(bar.ageBeforeTypeCast, 4);
  },
  
  "should convert a string into a float": function() {
    var bar = new Foo();
    bar.height = "4.3";
    
    assert.equal(bar.height, 4.3);
    assert.equal(bar.heightBeforeTypeCast, 4.3);
  },
  
  "should convert a float into a float": function() {
    var bar = new Foo();
    bar.height = 4.3;
    
    assert.equal(bar.height, 4.3);
    assert.equal(bar.heightBeforeTypeCast, 4.3);
  },

  "should convert '0' into a true boolean": function() {
    var bar = new Foo();
    bar.isReady = "0";
    
    assert.equal(true, bar.isReady);
    assert.equal("0", bar.isReadyBeforeTypeCast);
  },
  
  "should convert 0 into a false boolean": function() {
    var bar = new Foo();
    bar.isReady = 0;
    
    assert.equal(false, bar.isReady);
    assert.equal(0, bar.isReadyBeforeTypeCast);
  },
  
  "should convert 1 into a true boolean": function() {
    var bar = new Foo();
    bar.isReady = 1;
    
    assert.equal(true, bar.isReady);
    assert.equal(1, bar.isReadyBeforeTypeCast);
  },
  
  "should convert '1' into a true boolean" : function() {
    var bar = new Foo();
    bar.isReady = "1";
    
    assert.equal(true, bar.isReady);
    assert.equal("1", bar.isReadyBeforeTypeCast);
  },
  
  "should convert 'true' into a true boolean" : function() {
    var bar = new Foo();
    bar.isReady = 'true';
    
    assert.equal(true, bar.isReady);
    assert.equal('true', bar.isReadyBeforeTypeCast);
  },
  
  "should convert true into a true boolean" : function() {
    var bar = new Foo();
    bar.isReady = true;
    
    assert.equal(true, bar.isReady);
    assert.equal(true, bar.isReadyBeforeTypeCast);
  },
  
  "should convert 'false' into a false boolean" : function() {
    var bar = new Foo();
    bar.isReady = 'false';
    
    assert.equal(false, bar.isReady);
    assert.equal('false', bar.isReadyBeforeTypeCast);
  },
  
  "should convert false into a false boolean" : function() {
    var bar = new Foo();
    bar.isReady = false;
    
    assert.equal(false, bar.isReady);
    assert.equal(false, bar.isReadyBeforeTypeCast);
  },
  
  "should convert a random string into a true boolean" : function() {
    var bar = new Foo();
    bar.isReady = "abcedef";
    
    assert.equal(true, bar.isReady);
    assert.equal("abcedef", bar.isReadyBeforeTypeCast);
  },
  
  "should convert a currency into a float" : function() {
    var bar = new Foo();
    bar.price = "$5.43";
    
    assert.equal(bar.price, 5.43);
    assert.equal(bar.priceBeforeTypeCast, "$5.43");
  },
  
  "should convert a currency float into a float" : function() {
    var bar = new Foo();
    bar.price = 5.43;
    
    assert.equal(bar.price, 5.43);
    assert.equal(bar.priceBeforeTypeCast, "5.43");
  },
  
  "should convert a currency float string into a float" : function() {
    var bar = new Foo();
    bar.price = "5.43";
    
    assert.equal(bar.price, "5.43");
    assert.equal(bar.priceBeforeTypeCast, "5.43")
  },
  
  "should convert a int into a percent float" : function() {
    var bar = new Foo();
    bar.approvalRating = 4
    
    assert.equal(bar.approvalRating, 4);
    assert.equal(bar.approvalRatingBeforeTypeCast, 4);
  },
  
  // dates
  "should convert a string to a null date" : function() {
    var bar = new Foo();
    bar.birthday = "sdaf"
    
    assert.equal(null, bar.birthday);
    assert.equal("sdaf", bar.birthdayBeforeTypeCast);
  },
  
  "should convert an object with only a year to a null date" : function() {
    var bar = new Foo();
    var birthday = { year: 1990 };
    bar.birthday = birthday
    assert.equal(null, bar.birthday);
    assert.equal(birthday, bar.birthdayBeforeTypeCast);
  },
  
  "should convert an object with a year and a month to a date" : function() {
    var bar = new Foo();
    var birthday = { year: 1990, month: 6 };
    bar.birthday = birthday;
    
    assert.ok(bar.birthday);
    assert.equal(bar.birthday.getFullYear(), 1990);
    assert.equal(bar.birthday.getMonth(), 5);
    assert.equal(birthday, bar.birthdayBeforeTypeCast);
    
    bar.attributes = { 
      birthday: { 
        year: "1990",
        month: "6" 
      }
    };
    
    assert.ok(bar.birthday);
    assert.equal(bar.birthday.getFullYear(), 1990);
    assert.equal(bar.birthday.getMonth(), 5);
  },
  
  "should convert a date string into a date" : function() {
    var bar = new Foo({birthday: new Date().toString() });
    
    assert.ok(bar.birthday instanceof Date);
  },
  
  "shoudl allow setting of a date" : function() {
    var bar = new Foo();
    var date = new Date(2000, 1, 1);
    bar.birthday = date;
    
    assert.ok(bar.birthday.toUTCString(), date.toUTCString())
  }
};